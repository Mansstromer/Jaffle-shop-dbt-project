{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.9", "generated_at": "2025-09-02T12:35:37.448017Z", "invocation_id": "73d92fd6-c973-4d6b-b0f7-e9bc4e7b07cc", "invocation_started_at": "2025-09-02T12:35:34.341604Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:36.774921Z", "completed_at": "2025-09-02T12:35:36.791893Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:36.792905Z", "completed_at": "2025-09-02T12:35:36.888209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11531591415405273, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.stg_customers", "compiled": true, "compiled_code": "-- models/staging/stg_customers.sql\nwith src as (select * from \"warehouse\".\"main_raw\".\"raw_customers\")\nselect\n  cast(id as varchar) as customer_id,\n  trim(name) as customer_name\nfrom src", "relation_name": "\"warehouse\".\"main_staging\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:36.897209Z", "completed_at": "2025-09-02T12:35:36.904262Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:36.905265Z", "completed_at": "2025-09-02T12:35:36.944456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05024433135986328, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.stg_items", "compiled": true, "compiled_code": "with src as (\n  select * from \"warehouse\".\"main_raw\".\"raw_items\"\n)\nselect\n  cast(order_id as varchar) as order_id,  -- FK to orders\n  cast(sku      as varchar) as product_id, \n  1                           as quantity  -- Assumption: one row = one item\nfrom src", "relation_name": "\"warehouse\".\"main_staging\".\"stg_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:36.950456Z", "completed_at": "2025-09-02T12:35:36.957454Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:36.958456Z", "completed_at": "2025-09-02T12:35:36.998472Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.050018310546875, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.stg_orders", "compiled": true, "compiled_code": "with src as (\n  select * from \"warehouse\".\"main_raw\".\"raw_orders\"\n)\nselect\n  cast(id as varchar)                 as order_id,\n  cast(customer as varchar)           as customer_id,\n  cast(store_id as varchar)           as store_id,\n  cast(ordered_at as timestamp)       as ordered_at,\n  cast(subtotal as decimal(10,2))            as subtotal,\n  cast(tax_paid as decimal(10,2))            as tax_paid,\n  cast(order_total as decimal(10,2))         as order_total\nfrom src", "relation_name": "\"warehouse\".\"main_staging\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.004472Z", "completed_at": "2025-09-02T12:35:37.011468Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.012470Z", "completed_at": "2025-09-02T12:35:37.050257Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04779624938964844, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.stg_products", "compiled": true, "compiled_code": "-- models/staging/stg_products.sql\nwith src as (select * from \"warehouse\".\"main_raw\".\"raw_products\")\nselect\n  cast(sku as varchar)      as product_id,\n  trim(name)                as product_name, \n  cast(price as decimal(10,2))    as price\nfrom src", "relation_name": "\"warehouse\".\"main_staging\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.056267Z", "completed_at": "2025-09-02T12:35:37.065265Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.065265Z", "completed_at": "2025-09-02T12:35:37.104217Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04994702339172363, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.dim_customers", "compiled": true, "compiled_code": "with orders as (\n  select\n    customer_id,\n    cast(ordered_at as date) as order_date,\n    subtotal / 100.0         as revenue_usd   -- net of tax for LTV\n  from \"warehouse\".\"main_staging\".\"stg_orders\"\n)\nselect\n  c.customer_id,\n  c.customer_name,\n  min(o.order_date)              as first_order_date,\n  max(o.order_date)              as last_order_date,\n  count(*)                       as order_count,\n  sum(o.revenue_usd)             as lifetime_value_usd\nfrom \"warehouse\".\"main_staging\".\"stg_customers\" c\nleft join orders o using (customer_id)\ngroup by 1,2", "relation_name": "\"warehouse\".\"main_marts\".\"dim_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.110216Z", "completed_at": "2025-09-02T12:35:37.117633Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.117633Z", "completed_at": "2025-09-02T12:35:37.205013Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09682941436767578, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.fct_orders", "compiled": true, "compiled_code": "-- Revenue = subtotal (excl. tax); Gross = subtotal + tax\nselect\n  o.order_id,\n  o.customer_id,\n  cast(o.ordered_at as date)                              as order_date,\n  strftime(date_trunc('month', o.ordered_at), '%Y-%m-01') as order_month,\n\n  -- cents -> USD\n  o.subtotal    / 100.0 as revenue_usd,        -- <- use this everywhere for KPIs/charts\n  o.tax_paid    / 100.0 as tax_usd,\n  o.order_total / 100.0 as gross_sales_usd     -- (= revenue_usd + tax_usd)\nfrom \"warehouse\".\"main_staging\".\"stg_orders\" as o", "relation_name": "\"warehouse\".\"main_marts\".\"fct_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.212012Z", "completed_at": "2025-09-02T12:35:37.219191Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.219191Z", "completed_at": "2025-09-02T12:35:37.260194Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05118131637573242, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.fct_order_items", "compiled": true, "compiled_code": "--- models/marts/fct_order_items.sql\nwith items as (\n  select i.order_id, i.product_id, coalesce(i.quantity, 1) as quantity\n  from \"warehouse\".\"main_staging\".\"stg_items\" i\n),\norders as (\n  select order_id, customer_id,\n         cast(ordered_at as date) as order_date,\n         strftime(date_trunc('month', ordered_at), '%Y-%m-01') as order_month\n  from \"warehouse\".\"main_staging\".\"stg_orders\"\n),\nproducts as (\n  select\n    p.product_id,\n    p.product_name,\n    p.price / 100.0 as unit_price_usd,\n    case\n      when p.product_id like 'BEV%' then 'drinks'\n      when p.product_id like 'JAF%' then 'sandwiches'\n      else 'other'\n    end as product_category\n  from \"warehouse\".\"main_staging\".\"stg_products\" p\n)\nselect\n  o.order_id,\n  o.customer_id,\n  o.order_date,\n  o.order_month,\n  pr.product_id,\n  pr.product_name,\n  pr.product_category,\n  it.quantity,\n  pr.unit_price_usd,\n  it.quantity * pr.unit_price_usd as line_revenue_usd\nfrom items it\njoin orders  o  using (order_id)\njoin products pr using (product_id)", "relation_name": "\"warehouse\".\"main_marts\".\"fct_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.265709Z", "completed_at": "2025-09-02T12:35:37.272710Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.274679Z", "completed_at": "2025-09-02T12:35:37.312709Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04899954795837402, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.customer_pareto", "compiled": true, "compiled_code": "with ltv as (\n  select\n    customer_id,\n    sum(revenue_usd) as lifetime_value_usd  -- net of tax\n  from \"warehouse\".\"main_marts\".\"fct_orders\"\n  group by 1\n),\nranked as (\n  select\n    customer_id,\n    lifetime_value_usd,\n    rank()  over (order by lifetime_value_usd desc) as rnk,\n    count(*) over ()                                 as total_customers,\n    sum(lifetime_value_usd) over ()                  as total_revenue_usd,\n    sum(lifetime_value_usd) over (\n      order by lifetime_value_usd desc\n      rows between unbounded preceding and current row\n    )                                               as cum_revenue_usd\n  from ltv\n)\nselect\n  customer_id,\n  lifetime_value_usd,\n  rnk,\n  cast(rnk as double) / total_customers                  as customer_pct,\n  cum_revenue_usd / nullif(total_revenue_usd, 0)         as revenue_cum_pct\nfrom ranked\norder by rnk", "relation_name": "\"warehouse\".\"main_marts\".\"customer_pareto\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.319455Z", "completed_at": "2025-09-02T12:35:37.326442Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.326442Z", "completed_at": "2025-09-02T12:35:37.367510Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0510258674621582, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.orders_fact", "compiled": true, "compiled_code": "with orders as (\n  select\n    order_id,\n    customer_id,\n    order_date,\n    order_month,\n    revenue_usd as order_revenue_usd  -- <- net of tax\n  from \"warehouse\".\"main_marts\".\"fct_orders\"\n),\nfirst_order as (\n  select customer_id, min(order_date) as first_order_date\n  from orders\n  group by 1\n)\nselect\n  o.order_id,\n  o.customer_id,\n  o.order_date,\n  o.order_month,\n  o.order_revenue_usd,\n  case when o.order_date = f.first_order_date then true else false end as is_first_order,\n  case when o.order_date = f.first_order_date then 'new' else 'repeat' end as customer_cohort\nfrom orders o\njoin first_order f using (customer_id)", "relation_name": "\"warehouse\".\"main_marts\".\"orders_fact\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-02T12:35:37.373512Z", "completed_at": "2025-09-02T12:35:37.380509Z"}, {"name": "execute", "started_at": "2025-09-02T12:35:37.381511Z", "completed_at": "2025-09-02T12:35:37.434748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06323647499084473, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.case_project.monthly_summary", "compiled": true, "compiled_code": "with base as (\n  select\n    order_id,\n    customer_id,\n    order_date,\n    order_month,\n    order_revenue_usd\n  from \"warehouse\".\"main_marts\".\"orders_fact\"\n),\nlabeled as (\n  select\n    b.*,\n    case when order_date = min(order_date) over (partition by customer_id)\n         then 1 else 0 end as is_new_order\n  from base b\n)\nselect\n  order_month,\n  sum(order_revenue_usd)                                   as monthly_revenue_usd,   -- KPI: Revenue\n  count(distinct order_id)                                 as monthly_orders,\n  count(distinct customer_id)                              as active_customers,\n  sum(order_revenue_usd) / nullif(count(distinct order_id),0) as aov_usd,\n  sum(is_new_order)                                        as new_customers,\n  (count(distinct customer_id) - sum(is_new_order))        as repeat_customers,\n  (count(distinct customer_id) - sum(is_new_order)) * 1.0\n    / nullif(count(distinct customer_id),0)                as repeat_purchase_rate\nfrom labeled\ngroup by 1\norder by 1", "relation_name": "\"warehouse\".\"main_marts\".\"monthly_summary\"", "batch_results": null}], "elapsed_time": 1.043210506439209, "args": {"profiles_dir": "D:\\projects\\Case Project main", "state_modified_compare_vars": false, "show_resource_report": false, "send_anonymous_usage_stats": true, "vars": {}, "select": [], "state_modified_compare_more_unrendered_values": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "defer": false, "introspect": true, "write_json": true, "require_batched_execution_for_custom_microbatch_strategy": false, "validate_macro_args": false, "partial_parse": true, "populate_cache": true, "indirect_selection": "eager", "project_dir": "D:\\projects\\Case Project main", "which": "run", "cache_selected_only": false, "strict_mode": false, "partial_parse_file_diff": true, "favor_state": false, "log_level_file": "debug", "upload_to_artifacts_ingest_api": false, "use_colors": true, "invocation_command": "dbt run", "require_explicit_package_overrides_for_builtin_materializations": true, "show_all_deprecations": false, "source_freshness_run_project_hooks": true, "log_path": "D:\\projects\\Case Project main\\logs", "require_nested_cumulative_type_params": false, "skip_nodes_if_on_run_start_fails": false, "version_check": true, "print": true, "require_all_warnings_handled_by_warn_error": false, "require_resource_names_without_spaces": true, "require_yaml_configuration_for_mf_time_spines": false, "log_format": "default", "require_generic_test_arguments_property": true, "static_parser": true, "log_level": "info", "quiet": false, "use_colors_file": true, "log_file_max_bytes": 10485760, "log_format_file": "debug", "empty": false, "printer_width": 80, "exclude": [], "macro_debugging": false, "use_fast_test_edges": false}}